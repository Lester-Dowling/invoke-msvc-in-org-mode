# -*- coding: utf-8 -*-
#+TITLE: Examples of Using Armadillo from Vcpkg
#+AUTHOR: L. James Dowling

#+NAME: id-tbl
#+BEGIN_SRC emacs-lisp :var tbl=""
(mapcar (lambda (row) (mapcar (lambda (cell) cell) row)) tbl)
#+end_src

#+NAME: round-tbl
#+BEGIN_SRC emacs-lisp :var tbl="" fmt="%.4f"
(mapcar (lambda (row) (mapcar (lambda (cell) (if (numberp cell) (format fmt cell) cell)) row)) tbl)
#+end_src


** Verify Armadillo version
#+header: :libs     -lvcpkg
#+header: :includes <iostream> <string> <armadillo>
#+header: :colnames yes :post id-tbl[:colnames yes](*this*)
#+begin_src C++ :exports results   :results  value table
using namespace std;
using namespace arma;
std::ios::sync_with_stdio(true);
const char tab = '\t', newline = '\n';

cout << "Armadillo Version" << tab << newline;
cout << arma_version::as_string() << tab << newline;
#+end_src

#+RESULTS:
| Armadillo Version           |
|-----------------------------|
| 12.0.1 (Cortisol Profusion) |


** Create an Armadillo Matrix
#+header: :libs     -lvcpkg
#+header: :includes <iostream> <armadillo>
#+header: :colnames yes :post round-tbl[:colnames yes](*this*)
#+begin_src C++ :exports results   :results  value table
using namespace std;
using namespace arma;
std::ios::sync_with_stdio(true);
const char tab = '\t', newline = '\n';

mat A{5, 5, fill::randu};
A.print("A: ");
A.save("A-matrix.bin");
cout << endl;
mat AA;
AA.load("A-matrix.bin");
AA.print("AA: ");
#+end_src

#+RESULTS:
|     A: |        |        |        |        |
|--------+--------+--------+--------+--------|
| 0.8634 | 0.8296 | 0.1600 | 0.2330 | 0.6979 |
| 0.8899 | 0.1792 | 0.7420 | 0.7058 | 0.3701 |
| 0.3604 | 0.2807 | 0.7047 | 0.7213 | 0.1271 |
| 0.4156 | 0.2088 | 0.1175 | 0.3593 | 0.2863 |
| 0.9300 | 0.8655 | 0.7502 | 0.7527 | 0.2077 |
|        |        |        |        |        |
|    AA: |        |        |        |        |
| 0.8634 | 0.8296 | 0.1600 | 0.2330 | 0.6979 |
| 0.8899 | 0.1792 | 0.7420 | 0.7058 | 0.3701 |
| 0.3604 | 0.2807 | 0.7047 | 0.7213 | 0.1271 |
| 0.4156 | 0.2088 | 0.1175 | 0.3593 | 0.2863 |
| 0.9300 | 0.8655 | 0.7502 | 0.7527 | 0.2077 |


** Eigen decomposition of dense symmetric/hermitian matrix X
#+header: :libs   -lvcpkg_armadillo  -lvcpkg_lapack   -lvcpkg_openblas
#+header: :includes <iostream> <cmath> <armadillo>
#+begin_src C++ :exports results   :results  value
using namespace std;
using namespace arma;
std::ios::sync_with_stdio(true);
const char tab = '\t', newline = '\n';

mat A(8, 8, fill::randu);
mat B = A.t()*A;  // generate a symmetric matrix

vec eigval;
mat eigvec;

eig_sym(eigval, eigvec, B);
eigval.print("Eigenvalue:");
eigvec.print("Eigenvector:");
#+end_src

#+RESULTS:
|  Eigenvalue: |         |         |         |         |         |         |        |
|       0.0248 |         |         |         |         |         |         |        |
|       0.0578 |         |         |         |         |         |         |        |
|       0.2076 |         |         |         |         |         |         |        |
|       0.4278 |         |         |         |         |         |         |        |
|       0.6324 |         |         |         |         |         |         |        |
|       1.1161 |         |         |         |         |         |         |        |
|       2.0077 |         |         |         |         |         |         |        |
|      15.6639 |         |         |         |         |         |         |        |
| Eigenvector: |         |         |         |         |         |         |        |
|       0.3766 | -0.3078 |  0.1369 |  0.3652 |   0.371 | -0.3071 | -0.4446 | 0.4262 |
|       0.2614 | -0.2195 | -0.4733 |  0.0889 | -0.6817 |  0.2207 | -0.0711 | 0.3647 |
|      -0.1391 |  0.7756 |  -0.124 | -0.1222 | -0.1116 | -0.3265 | -0.3127 | 0.3634 |
|       0.0761 |  0.3162 | -0.3195 |  0.4182 |  0.4401 |  0.4299 |  0.4123 | 0.2622 |
|       0.3644 |  0.1446 |  0.5897 |  0.0182 | -0.2785 | -0.1721 |  0.5595 | 0.2795 |
|      -0.6473 | -0.1652 |  0.4028 |  0.0698 | -0.0777 |  0.3754 | -0.1224 |  0.474 |
|       -0.354 | -0.3227 | -0.3602 |  -0.181 |  0.1354 | -0.5448 |  0.4465 | 0.3058 |
|        0.296 | -0.0566 | -0.0082 | -0.7943 |  0.2992 |  0.3133 | -0.0469 | 0.2972 |
