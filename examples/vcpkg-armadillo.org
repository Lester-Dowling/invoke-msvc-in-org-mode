# -*- coding: utf-8 -*-
#+TITLE: Examples of Using Armadillo from Vcpkg
#+AUTHOR: L. James Dowling

#+NAME: id-tbl
#+BEGIN_SRC emacs-lisp :var tbl=""
(mapcar (lambda (row) (mapcar (lambda (cell) cell) row)) tbl)
#+end_src

#+NAME: round-tbl
#+BEGIN_SRC emacs-lisp :var tbl="" fmt="%.4f"
(mapcar (lambda (row) (mapcar (lambda (cell) (if (numberp cell) (format fmt cell) cell)) row)) tbl)
#+end_src


** Verify Armadillo version
#+header: :libs     -lvcpkg
#+header: :includes <iostream> <string> <armadillo>
#+header: :colnames yes :post id-tbl[:colnames yes](*this*)
#+begin_src C++ :exports results   :results  value table
using namespace std;
using namespace arma;
std::ios::sync_with_stdio(true);
const char tab = '\t', newline = '\n';

cout << "Armadillo Version" << tab << newline;
cout << arma_version::as_string() << tab << newline;
#+end_src


** Create an Armadillo Matrix
#+header: :libs     -lvcpkg
#+header: :includes <iostream> <armadillo>
#+header: :colnames yes :post round-tbl[:colnames yes](*this*)
#+begin_src C++ :exports results   :results  value table
using namespace std;
using namespace arma;
std::ios::sync_with_stdio(true);
const char tab = '\t', newline = '\n';

mat A{5, 5, fill::randu};
A.print("A: ");
A.save("A-matrix.bin");
cout << endl;
mat AA;
AA.load("A-matrix.bin");
AA.print("AA: ");
#+end_src


** Eigen decomposition of dense symmetric/hermitian matrix X
#+header: :libs   -lvcpkg_armadillo  -lvcpkg_lapack   -lvcpkg_openblas
#+header: :includes <iostream> <cmath> <armadillo>
#+begin_src C++ :exports results   :results  value
using namespace std;
using namespace arma;
std::ios::sync_with_stdio(true);
const char tab = '\t', newline = '\n';

mat A(8, 8, fill::randu);
mat B = A.t()*A;  // generate a symmetric matrix

vec eigval;
mat eigvec;

eig_sym(eigval, eigvec, B);
eigval.print("Eigenvalue:");
eigvec.print("Eigenvector:");
#+end_src
